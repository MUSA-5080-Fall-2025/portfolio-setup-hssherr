{
  "hash": "5370959ffdc0c5573edaf2693fe736b0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Henry Sywulak-Herr\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable\npopulations (elderly + low-income) living far from hospitals?**\n\n#### Step 1: Data Collection\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(pacman)\np_load(tidyverse, tidycensus, tigris, sf, knitr)\n\n# Load spatial data\nfips_code_pa <- 42\ndata_year <- 2022\n\ncounties <- counties(state = fips_code_pa,\n                     year = data_year,\n                     progress_bar = F)\ntracts <- tracts(state = fips_code_pa,\n                 year = data_year,\n                 progress_bar = F)\nhospitals <- st_read(\"./data/hospitals.geojson\", quiet = T)\n\ndata_list <- mget(c(\"counties\", \"tracts\", \"hospitals\"))\n\n# Check that all data loaded correctly\npaste0(\"Hospital Count = \", nrow(hospitals))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Hospital Count = 223\"\n```\n\n\n:::\n\n```{.r .cell-code}\npaste0(\"Census Tract Count = \", nrow(tracts))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Census Tract Count = 3446\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncrs_df <- data.frame(Datum = sapply(data_list, function(x) {st_crs(x, parameters = T)$Name}),\n                     EPSG = sapply(data_list, function(x) {st_crs(x, parameters = T)$epsg}))\n\nkable(crs_df)\n```\n\n::: {.cell-output-display}\n\n\n|          |Datum  | EPSG|\n|:---------|:------|----:|\n|counties  |NAD83  | 4269|\n|tracts    |NAD83  | 4269|\n|hospitals |WGS 84 | 4326|\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n#### Step 2: Demographic Data Acquisition\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvariable_names <- tidycensus::load_variables(2022, \"acs5\")\n\n# Get demographic data from ACS\nvars <- c(\"pop_tot\" = \"B01001_001\",\n          \"med_hh_inc\" = \"B19013_001\")\n\npop_over65_vars <- c(\"B01001_020\", \"B01001_021\", \"B01001_022\", \"B01001_023\", \"B01001_024\", \"B01001_025\",\n              \"B01001_044\", \"B01001_045\", \"B01001_046\", \"B01001_047\", \"B01001_048\", \"B01001_049\")\n\npopTot_medInc <- get_acs(geography = \"tract\",\n                     variable = vars,\n                     year = data_year,\n                     state = fips_code_pa,\n                     output = \"wide\")\n\npop_over65 <- get_acs(geography = \"tract\",\n                      variable = pop_over65_vars,\n                      year = data_year,\n                      state = fips_code_pa)\n\npop_over65_sum <- pop_over65 %>% \n  group_by(GEOID) %>% \n  summarise(pop_elderlyE = sum(estimate),\n            pop_elderlyM = sum(moe))\n\ndemo_vars <- left_join(popTot_medInc, pop_over65_sum, by = \"GEOID\")\n\n# Join to tract boundaries\ndemo_vars_sf <- left_join(demo_vars, tracts %>% select(GEOID), by = \"GEOID\") %>% \n  st_as_sf()\n\n# Separate out Tract/County names\ndemo_vars_sf <- demo_vars_sf %>%\n  separate(NAME,\n           into = c(\"TRACT\", \"COUNTY\", \"STATE\"),\n           sep = \"; \",\n           remove = T) %>% \n  mutate(TRACT = parse_number(TRACT),\n         COUNTY = sub(x = COUNTY, \" County\", \"\"))\n\n\n# Answers to questions\npaste0(\"ACS Year = \", data_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ACS Year = 2022\"\n```\n\n\n:::\n\n```{.r .cell-code}\npaste0(\"Count of Tracts with Missing Income Data = \", sum(is.na(demo_vars_sf$med_hh_incE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Count of Tracts with Missing Income Data = 63\"\n```\n\n\n:::\n\n```{.r .cell-code}\npaste0(\"Median Income across All PA Census Tracts = \", median(demo_vars_sf$med_hh_incE, na.rm = T))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Median Income across All PA Census Tracts = 70188\"\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n#### Step 3: Defining Vulnerable Populations\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on criteria\ndemo_vars_sf <- demo_vars_sf %>%\n  mutate(pop_elderly_pct = round((pop_elderlyE / pop_totE)*100, 2),\n         low_inc = as.integer(med_hh_incE < 50000),\n         high_elderly = as.integer(pop_elderly_pct > 16.8),\n         vulnerable = case_when(low_inc == 1 & high_elderly == 1 ~ 1,\n                                .default = 0))\n\nvulnerable_tracts <- demo_vars_sf %>% filter(vulnerable == 1)\n\nkable(head(vulnerable_tracts %>% \n             select(TRACT, COUNTY, pop_totE, med_hh_incE, pop_elderlyE, pop_elderly_pct) %>% \n             st_drop_geometry()),\n      col.names = c(\"Tract\", \"County\", \"Total Population\", \"Median HH Inc ($)\", \"Elderly Population\", \"Percent Elderly\"),\n      caption = \"Example tracts with low median household income and a high percentage of elderly residents:\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Example tracts with low median household income and a high percentage of elderly residents:\n\n|  Tract|County    | Total Population| Median HH Inc ($)| Elderly Population| Percent Elderly|\n|------:|:---------|----------------:|-----------------:|------------------:|---------------:|\n| 315.02|Adams     |             3908|             46109|                698|           17.86|\n| 305.00|Allegheny |             3044|             36932|                544|           17.87|\n| 501.00|Allegheny |             1561|             30036|                345|           22.10|\n| 506.00|Allegheny |             1960|             42951|                407|           20.77|\n| 509.00|Allegheny |             1380|             12740|                236|           17.10|\n| 709.00|Allegheny |             4196|             49421|                721|           17.18|\n\n\n:::\n:::\n\n\nAccording to an article in [Philadelphia\nToday](https://philadelphia.today/2024/09/philadelphia-poverty-rate/),\nthe household poverty threshold in 2023 was \\$30,000. While this is the\nofficial threshold - and likely higher than it was in 2022 - healthcare\ncosts and a lack of consistent income post-retirement for elderly folks\nlikely result in additional financial strain even if they have income\nlevels slightly greater than \\$30,000. For this analysis, a low-income\nthreshold of \\$50,000 was chosen instead to encompass these groups of\nresidents.\n\nBetween 2010 and 2020, the people aged 65 and older in the United States\n[exceeded 1 in 6\nresidents](https://www.census.gov/library/stories/2023/05/2020-census-united-states-older-population-grew.html)\n(16.8%). This percentage was used as the threshold for having an\nabnormally high elderly population.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# count of tracts that meet vulnerability critetia\npaste0(\"Count of Vulnerable Tracts = \", nrow(vulnerable_tracts))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Count of Vulnerable Tracts = 258\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# percent of census tracts considered vulnerable\npaste0(\"Percentage of PA Tracts Considered Vulnerable = \", round((nrow(vulnerable_tracts)/nrow(demo_vars_sf))*100, 2), \"%\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Percentage of PA Tracts Considered Vulnerable = 7.49%\"\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n#### Step 4: Calculating Distance to Hospitals\n\nA projected coordinate system centered around southern Pennsylvania\n(EPSG 2272) was chosen for this analysis in order to accurately\ncalculate distances to the nearest hospital, unlike the original\ngeographic coordinate systems each layer was in previously which are in\nunits of decimal degrees. This coordinate system is based on the NAD83\ndatum and has units of US Survey Feet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to appropriate projected CRS\n\ndemo_vars_sf <- demo_vars_sf %>% \n  st_transform(2272)\nhospitals <- hospitals %>% \n  st_transform(2272)\n\n# Calculate distance matrix for each tract centroid to the nearest hospital\nhospital_dist_matrix <- demo_vars_sf %>%\n  st_centroid() %>% \n  st_distance(hospitals)\n\nhospital_dist_min <- apply(hospital_dist_matrix, 1, min)\n\ndemo_vars_sf <- demo_vars_sf %>% \n  mutate(hospital_dist = round((hospital_dist_min)/5280, 2))\n\n# Recreate vulnerable tracts df with hospital_dist variable\nvulnerable_tracts <- demo_vars_sf %>% filter(vulnerable == 1)\n\n# Average distance to hospitals\npaste0(\"Average Distance from Vulnerable Tracts to the Nearest Hospital = \",\n       round(mean(vulnerable_tracts$hospital_dist), 2), \n       \" mi\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Average Distance from Vulnerable Tracts to the Nearest Hospital = 3.24 mi\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Maximum distance to hospitals\npaste0(\"Maximum Distance from Tract Centroids to Nearest Hospital = \",\n       max(vulnerable_tracts$hospital_dist),\n       \" mi\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Maximum Distance from Tract Centroids to Nearest Hospital = 18.67 mi\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Count of vulnerable tracts more than 15 mi from the nearest hospital\npaste0(\"Number of Vulnerable Tracts >15 mi from the Nearest Hospital = \",\n       sum(vulnerable_tracts$hospital_dist > 15))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of Vulnerable Tracts >15 mi from the Nearest Hospital = 7\"\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n#### Step 5: Identify Underserved Areas\n\n\"Underserved\" tracts are defined here as vulnerable tracts that are more\nthan 15 miles from the nearest hospital.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\nvulnerable_tracts <- vulnerable_tracts %>% \n  mutate(underserved = case_when((vulnerable == 1 & hospital_dist > 15) ~ 1,\n                                 .default = 0))\n\n# Number of underserved tracts\npaste0(\"Number of Underserved Tracts = \", sum(vulnerable_tracts$underserved))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of Underserved Tracts = 7\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Percentage of vulnerable tracts that are underserved\npaste0(\"Percentage of Vulnerable Tracts that are Underserved = \",\n       round(sum(vulnerable_tracts$underserved)/nrow(vulnerable_tracts)*100, 2),\n       \"%\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Percentage of Vulnerable Tracts that are Underserved = 2.71%\"\n```\n\n\n:::\n:::\n\n\nThe percentage of vulnerable tracts that are underserved is rather low\nin Pennsylvania, which is surprising. Pennsylvania has many rural\ncommunities with sparsely distributed resources, including hospitals.\nThe distribution of underserved census tracts in Pennsylvania do appear\nto be in rural, central PA counties (see the table below for the\ncounties associated with these seven tracts); however, it is puzzling\nhow few of them there are.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Table of the counties associated with the seven vulnerable tracts that are underserved in PA\nkable(vulnerable_tracts %>% \n        filter(underserved == 1) %>%\n        select(TRACT, COUNTY) %>%\n        st_drop_geometry(),\n      col.names = c(\"Tract\", \"County\"),\n      caption = \"Underserved Vulnerable Tracts in PA\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Underserved Vulnerable Tracts in PA\n\n|   Tract|County     |\n|-------:|:----------|\n| 9601.00|Cameron    |\n| 3306.00|Clearfield |\n| 3316.00|Clearfield |\n| 5301.00|Forest     |\n| 5302.00|Forest     |\n|  702.01|Juniata    |\n| 3003.11|Monroe     |\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n#### Step 6: Aggregate to County Level\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\n# Spatial joins were not used because spatial inconsistencies between the layers were producing duplicate instances of tracts across multiple counties despite everything being in the same crs. Tabular joins were more effective.\n\ncounties <- counties %>% \n  st_transform(2272)\n\ndemo_vars_sf <- demo_vars_sf %>%\n  mutate(underserved = case_when((vulnerable == 1 & hospital_dist > 15) ~ 1,\n                                 .default = 0))\n\ndemo_vars <- demo_vars_sf %>% \n  st_drop_geometry()\n\ndemo_vars_cty <- left_join(counties %>% select(GEOID, NAME),\n                         demo_vars, by = c(\"NAME\" = \"COUNTY\"))\n\n# Aggregate statistics by county\ndemo_vars_cty_stats <- demo_vars_cty %>% \n  group_by(NAME) %>% \n  summarise(pop_tot_agg = sum(pop_totE, na.rm = T),\n            med_hh_inc_agg = median(med_hh_incE, na.rm = T), \n            pop_elderly_agg = sum(pop_elderlyE, na.rm = T),\n            low_inc_cnt = sum(low_inc, na.rm = T),\n            vulnerable_cnt = sum(vulnerable, na.rm = T),\n            underserved_cnt = sum(underserved, na.rm = T),\n            hospital_dist_avg = round(mean(hospital_dist, na.rm = T), 2),\n            pop_vulnerable = sum(pop_elderlyE*vulnerable)) %>% \n  mutate(pop_elderly_pct_agg = round((pop_elderly_agg/pop_tot_agg)*100, 2),\n         underserved_pct = round((underserved_cnt/vulnerable_cnt)*100, 2))\n```\n:::\n\n\nAfter conducting this analysis, there are only 5 counties that have\nunderserved census tracts: Cameron, Clearfield, Forest, Juniata, and\nMonroe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunderserved_pct_top <- demo_vars_cty_stats %>%\n  select(NAME, underserved_pct) %>% \n  arrange(-underserved_pct) %>% \n  head(5) %>% \n  st_drop_geometry()\n\nkable(underserved_pct_top,\n      col.names = c(\"County\", \"% of Vulnerable Tracts Underserved\"))\n```\n\n::: {.cell-output-display}\n\n\n|County     | % of Vulnerable Tracts Underserved|\n|:----------|----------------------------------:|\n|Cameron    |                             100.00|\n|Forest     |                             100.00|\n|Monroe     |                             100.00|\n|Clearfield |                              66.67|\n|Juniata    |                              50.00|\n\n\n:::\n:::\n\n\nThere are also only five counties that have an average distance to the\nnearest hospital greater than 15 miles: Cameron, Forest, Juniata, Pike,\nand Sullivan. However, due to the nature of aggregating tract-level data\nto the county level, Pike and Sullivan have no vulnerable tracts and\nthus have no vulnerable population (which was calculated by isolating\ntracts considered vulnerable and summing their elderly population). If\nconsidering living far from hospitals to include any distance greater\nthan 10 miles instead of 15, the top five counties with the greatest\nvulnerable population are:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvulnerable_pop_top <- demo_vars_cty_stats %>% \n  filter(hospital_dist_avg > 10) %>%\n  arrange(-pop_vulnerable) %>% \n  select(NAME, pop_vulnerable) %>% \n  head(5) %>% \n  st_drop_geometry()\n\nkable(vulnerable_pop_top, col.names = c(\"County\", \"Vulnerable Population\"))\n```\n\n::: {.cell-output-display}\n\n\n|County     | Vulnerable Population|\n|:----------|---------------------:|\n|Clearfield |                  2083|\n|Forest     |                  1593|\n|Juniata    |                  1332|\n|Bradford   |                   751|\n|Cameron    |                   428|\n\n\n:::\n:::\n\n\nThere is a pattern that counties with underserved elderly populations\ntypically lie in the more rural areas of central and northeastern\nPennsylvania, far from major city centers like Philadelphia and\nPittsburgh that have high concentrations of concentrated hospitals and\nmedical services.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemo_vars_cty_stats <- demo_vars_cty_stats %>% \n  mutate(underserved_cnt_factor = as.factor(underserved_cnt))\nplot(demo_vars_cty_stats[,\"underserved_cnt_factor\"],\n     pal = c(\"grey\", \"green4\", \"steelblue\"),\n     main = \"Count of Underserved Census Tracts\")\n```\n\n::: {.cell-output-display}\n![](assignment2_template_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n#### Step 7: Create Summary Table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_priority <- demo_vars_cty_stats %>% \n  filter(hospital_dist_avg > 10) %>% \n  arrange(-pop_vulnerable) %>% \n  head(10) %>% \n  select(NAME, pop_tot_agg, med_hh_inc_agg, pop_elderly_pct_agg, pop_vulnerable, hospital_dist_avg) %>% \n  st_drop_geometry()\n\n# Create and format priority counties table\nkable(top10_priority,\n      col.names = c(\"County\", \"Total Population\", \"Median HH Income ($)\", \"% Elderly Population\", \"Vulnerable Population\", \"Mean Distance to Nearest Hospital (mi)\"), format.args = list(big.mark = \",\"),\n      caption = \"Top Ten Counties to Target for Healthcare Investment\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Top Ten Counties to Target for Healthcare Investment\n\n|County     | Total Population| Median HH Income ($)| % Elderly Population| Vulnerable Population| Mean Distance to Nearest Hospital (mi)|\n|:----------|----------------:|--------------------:|--------------------:|---------------------:|--------------------------------------:|\n|Clearfield |           79,707|             54,033.5|                21.07|                 2,083|                                  13.13|\n|Forest     |            6,959|             45,728.0|                22.89|                 1,593|                                  18.40|\n|Juniata    |           23,535|             64,173.0|                20.56|                 1,332|                                  15.01|\n|Bradford   |           60,159|             58,866.0|                21.74|                   751|                                  10.18|\n|Cameron    |            4,536|             45,279.5|                27.98|                   428|                                  19.07|\n|Monroe     |          168,128|             81,127.0|                18.27|                   314|                                  10.05|\n|Perry      |           45,941|             74,562.5|                19.37|                     0|                                  13.26|\n|Pike       |           58,996|             79,479.5|                22.99|                     0|                                  19.22|\n|Potter     |           16,390|             54,904.0|                24.87|                     0|                                  11.02|\n|Snyder     |           39,797|             66,042.0|                19.83|                     0|                                  14.47|\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Part 2: Comprehensive Visualization\n\n### Map 1: County-Level Choropleth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(\n    data = demo_vars_cty_stats,\n    aes(fill = underserved_pct),\n    color = \"transparent\"\n    ) +\n  scale_fill_binned(\n    name = \"Underserved Pct (%)\",\n    breaks = seq(0, 100, by = 20),\n    low = \"#e5f5e0\",\n    high = \"#006d2c\",\n    na.value = \"grey75\"\n    ) +\n  geom_sf(data = hospitals, aes(color = \"Hospitals\"), size = 0.75) +\n  scale_color_manual(name = \"Hospital Locations\",\n                     values = c(\"Hospitals\" = \"black\")\n                     ) +\n  theme_void() +\n  labs(title = \"Percent of Census Tracts Classified as Underserved Within a County\",\n       subtitle = \"Relative to Hospital Locations\")\n```\n\n::: {.cell-output-display}\n![](assignment2_template_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### Map 2: Detailed Vulnerability Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create detailed tract-level map\nggplot() +\n  geom_sf(data = demo_vars_sf %>% \n            mutate(fill_category = case_when(\n              underserved == 1 ~ \"Underserved\",\n              vulnerable == 1 ~ \"Vulnerable\",\n              vulnerable == 0 ~ \"Not Vulnerable\",\n              .default = \"No Data\"\n            )),\n          aes(fill = factor(fill_category, levels = c(\"Underserved\",\n                                                      \"Vulnerable\",\n                                                      \"Not Vulnerable\")\n                            )\n              ),\n          color = \"transparent\") +\n  scale_fill_manual(name = \"Underserved | Vulnerability\",\n                    values = c(\"Underserved\" = \"red3\",\n                               \"Vulnerable\" = \"gold2\",\n                               \"Not Vulnerable\" = \"grey75\",\n                               \"No Data\" = \"grey65\")\n                    ) +\n  geom_sf(data = counties,\n          fill = \"transparent\",\n          color = \"grey35\") +\n  geom_sf(data = hospitals,\n          aes(color = \"Hospitals\"),\n          size = 0.75) +\n   scale_color_manual(name = \"Hospital Locations\",\n                     values = c(\"Hospitals\" = \"black\")\n                     ) +\n  theme_void() +\n  labs(title = \"Spatial Comparison of Underserved and Vulnerable Census Tracts\",\n       subtitle = \"Relative to County Boundaries and Hospitals\")\n```\n\n::: {.cell-output-display}\n![](assignment2_template_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### Chart 1: Distribution Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\nggplot() +\n  geom_histogram(data = demo_vars_sf %>% filter(vulnerable == 1),\n                 aes(hospital_dist),\n                 bins = 50,\n                 na.rm = T, fill = \"steelblue\",\n                 colour = \"grey30\") +\n  labs(title = \"Histogram Distribution of Distances to the Nearest Hospital\",\n       subtitle = \"From Census Tract Centroids\",\n       x = \"Distance to the Nearest Hospital (mi)\",\n       y = \"Count\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](assignment2_template_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThe distribution is right-skewed with a majority of census tract\ncentroids lying within 4-5 miles of the closest hospital. The maximum\ndistance from a hospital is slightly less than 20 miles, and there are a\nconsiderable number of outliers between 5 and 20 miles.\n\n------------------------------------------------------------------------\n\n## Part 3: Additional Data Analysis\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage** - **Data:** Fire Stations, EMS\nstations, Population density, High-rise buildings - **Question:** \"Are\npopulation-dense areas adequately covered by emergency services?\" -\n**Operations:** Create service area buffers (5-minute drive = \\~2\nmiles), assess population coverage, identify gaps in high-density\nareas - **Policy relevance:** Emergency preparedness, station siting\ndecisions\n\n------------------------------------------------------------------------\n\n### Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load additional dataset(s)\npop_phl <- demo_vars_sf %>%\n  filter(COUNTY == \"Philadelphia\") %>% \n  select(GEOID, TRACT, COUNTY, STATE, pop_totE, pop_totM)\n\nfirehouses <- st_read(\"./data/Fire_Dept_Facilities.geojson\", quiet = T) %>% \n  st_transform(st_crs(pop_phl))\n\npaste0(\"Number of Fire Stations in PHL = \", nrow(firehouses))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of Fire Stations in PHL = 69\"\n```\n\n\n:::\n:::\n\n\nThe dataset loaded above was sourced from OpenDataPhilly's [Fire\nDepartment\nFacilities](https://opendataphilly.org/datasets/fire-department-facilities/)\ndataset, created in 2014. Despite the age of the dataset, it's assumed\nthat fire stations are relatively permanent fixtures in communities and\nlikely have persisted into the year of the population data (2022).\nThrough this assumption, this spatial analysis will seek to illustrate\nhow well/poorly fire stations in Philadelphia are adapted to the current\npopulation patterns within the city.\n\nThe firehouse dataset was originally in a geographic WGS84 coordinate\nsystem (EPSG 4326), which necessitated transforming it to a projected\ncoordinate system. The CRS used in the previous analysis (EPSG 2272) was\nintended for use in Southern Pennsylvania, and so the CRS from the\npopulation dataset was called instead of using the EPSG code to ensure\nthey'd be the same.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = demo_vars_sf %>% \n            filter(COUNTY == \"Philadelphia\") %>%\n            select(geometry),\n          fill = \"transparent\",\n          color = \"grey75\") +\n  geom_sf(data = demo_vars_cty %>% \n            filter(NAME == \"Philadelphia\") %>% \n            select(geometry),\n          fill = \"transparent\",\n          color = \"grey35\") +\n  geom_sf(data = firehouses,\n          aes(color = \"Firehouses\"),\n          size = 1) +\n  scale_color_manual(name = \"\",\n                     values = c(\"Firehouses\"= \"red3\")) +\n  theme_void() +\n  labs(title = \"Firehouse Locations in Philadelphia\",\n       subtitle = \"Relative to Census Tracts\")\n```\n\n::: {.cell-output-display}\n![](assignment2_template_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n**Note:** one fire station is located outside the southern boundary of\nPhiladelphia County. This is likely a fire station dedicated to serving\nthe Philadelphia International Airport, since most of the airport lies\nwithin Delaware County. This airport will be omitted from this analysis\npartially due to its location, but also because it likely primarily (or\nalmost exclusively) serves the airport, and from past experience\nanalyzing this area the population density is far lower due a high\nconcentration of both airport and industrial land uses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remove firehouses outside the boundary of Philadelphia County\nfirehouses <- st_filter(firehouses, demo_vars_cty %>% filter(NAME == \"Philadelphia\"))\n```\n:::\n\n\n------------------------------------------------------------------------\n\n**Pose a research question**\n\nDoes the distribution of fire stations in Philadelphia as registered in\n2014 (assumed to be the same, if not similar, to that of today)\nadequately cover the population of the city as of 2022? Which fire\nstations serve the lowest population density and where are they located\nin the city?\n\n------------------------------------------------------------------------\n\n**Conduct spatial analysis**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a two mile buffer zone around every fire station in Philadelphia County\nfirehouses_2mi <- st_buffer(firehouses, dist = (2*5280))\n\n# Calculate areas of census tracts to perform an areal interpolation\npop_phl <- pop_phl %>% \n  mutate(area_tract = as.numeric(st_area(.)))\n\n# perform an intersection to get every partial overlap of each buffer with the surrounding census tracts\n# calculate the areas of these intersections and get their area, then divide by the area of the corresponding census tract to get an area ratio\n# multiply this ratio to the total population of the census tract to get a partial population count for each intersection\n# NOTE: assumes even population distribution across every census tract\nfirehouses_int <- st_intersection(firehouses_2mi, pop_phl) %>% \n  mutate(area_int = as.numeric(st_area(.)),\n         area_frac = area_int/area_tract,\n         pop_int = pop_totE * area_frac)\n\n# sum population fractions to each buffer to get the total serviced population\nfirehouses_sum <- firehouses_int %>% \n  group_by(objectid) %>% \n  summarise(pop_served = sum(pop_int))\n\n# join results back to the point dataset to map\nfirehouses <- left_join(firehouses, firehouses_sum %>% st_drop_geometry(), by = \"objectid\")\n\nfirehouses_stats <- firehouses %>%\n  st_drop_geometry %>%\n  summarise(Minimum = min(pop_served, na.rm = T),\n            Mean = mean(pop_served, na.rm = T),\n            Median = median(pop_served, na.rm = T),\n            Maximum = max(pop_served, na.rm = T),\n            Total = sum(pop_served, na.rm = T)) %>% \n  kable(digits = 2,\n        format.args = list(big.mark = \",\"),\n        caption = \"Summary Statistics of Population Served by Firehouses in Philadelphia\")\n\nfirehouses_stats\n```\n\n::: {.cell-output-display}\n\n\nTable: Summary Statistics of Population Served by Firehouses in Philadelphia\n\n|   Minimum|      Mean|    Median|   Maximum|      Total|\n|---------:|---------:|---------:|---------:|----------:|\n| 26,670.02| 161,730.4| 176,151.6| 276,796.7| 10,997,666|\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = demo_vars_sf %>% \n            filter(COUNTY == \"Philadelphia\") %>%\n            select(geometry),\n          fill = \"transparent\",\n          color = \"grey75\") +\n  geom_sf(data = demo_vars_cty %>% \n            filter(NAME == \"Philadelphia\") %>% \n            select(geometry),\n          fill = \"transparent\",\n          color = \"grey35\") +\n  geom_sf(data = firehouses %>% mutate(pop_10k = pop_served/10000),\n          aes(fill = pop_10k),\n          shape = 21,\n          color = \"grey25\",\n          size = 3) +\n  scale_fill_binned(\n    name = \"Population Served (10k)\",\n    breaks = seq(0, 28, by = 7),\n    limits = c(0, 28),\n    low = \"#EEE5E9\",\n    high = \"red3\",\n    na.value = \"grey75\"\n    ) +\n  theme_void() +\n  labs(title = \"Total Population Served by Fire Stations in Philadelphia\",\n       subtitle = \"Station Locations: 2014, Population Data: 2022\")\n```\n\n::: {.cell-output-display}\n![](assignment2_template_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n**Interpretation of Findings:**\n\nAccording to the ACS5, the population in Philadelphia County is\napproximately 1,593,000 people. If every fire station served the median\nnumber of people served (176,000 people) and Philadelphia's population\nwere evenly distributed throughout the city, there would theoretically\nonly need to be 10 fire stations to cover the entirety of the city's\npopulation. This isn't the whole picture, however, as with all emergency\nservices redundancy and spatial proximity to residents is also critical\ntowards ensuring that all everying is served adequately and rapidly in\nthe event of a fire.\n\nFire stations in Philadelphia are spread throughout the city, with\ngreater concentrations in Center City and North Philadelphia. The\ngreatest populations served are also in these areas. As fire stations\nget closer to the border of the county the population served decreases.\nThis is likely due to edge effects where populations in surrounding\ncounties (Montgomery, Delaware, etc.) are not being counted despite\nthese stations still likely assisting them. On the eastern border of the\ncounty, this is due to the Delaware River and not due to the data\nrestrictions set at the beginning of this analysis.\n\nVisually, as the Navy Yard continues to see development in the coming\ndecades and as population density in the far Northeast continues to\nincrease, it might be a good policy decision in the future to encourage\nthe creation of additional fire stations in these areas in order to\nrelieve burden from surrounding stations and potentially improve\nresponse times. Further analysis could investigate average response\ntimes and/or quantify the burden currently on each station to see where\nadditional stations/resources are needed.\n\n## Comments about incorporation of feedback:\n\nAdditional care was taken to clean up this document, removing\ninstruction text and changing the wording of certain headings. All\ntables and charts that are produced in the report are intended to have a\npurpose/serve the narrative of the report. Tweaks were made to the\nclassification criteria at certain points (i.e. changing the threshold\nof hospital distance from 15 miles to 10 miles) in order to achieve a\nmore insightful result.\n\n------------------------------------------------------------------------\n\n## Submission Requirements\n\n**What to submit:**\n\n1.  **Rendered HTML document posted to your course portfolio** with all\n    code, outputs, maps, and text\n    -   Use `embed-resources: true` in YAML so it's a single file\n    -   All code should run without errors\n    -   All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and\n`LastName_FirstName_Assignment2.qmd`\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "assignment2_template_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}